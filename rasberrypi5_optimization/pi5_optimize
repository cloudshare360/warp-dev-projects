#!/bin/bash
# =================================================================
# RASPBERRY PI 5 OPTIMIZATION SUITE - MAIN LAUNCHER
# =================================================================
# Quick access to all optimization tools
# =================================================================

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CURRENT_SCRIPTS="$SCRIPT_DIR/scripts/current"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

show_banner() {
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                üöÄ Raspberry Pi 5 Optimization Suite          ‚ïë"
    echo "‚ïë                        Version 1.0                          ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

show_menu() {
    echo -e "${YELLOW}üìã Available Actions:${NC}"
    echo "===================="
    echo -e "${GREEN}[1]${NC} Check System Health & Status"
    echo -e "${GREEN}[2]${NC} Monitor System (Real-time)"
    echo ""
    echo -e "${YELLOW}üîÑ Rollback Options:${NC}"
    echo -e "${RED}[3]${NC} Complete Rollback (All optimizations)"
    echo -e "${RED}[4]${NC} CPU Overclock Rollback Only"
    echo -e "${RED}[5]${NC} GPU Settings Rollback Only"
    echo ""
    echo -e "${PURPLE}üîß Advanced:${NC}"
    echo -e "${PURPLE}[6]${NC} Version Management"
    echo -e "${PURPLE}[7]${NC} View Documentation"
    echo -e "${PURPLE}[8]${NC} Emergency Recovery Guide"
    echo ""
    echo -e "${BLUE}[9]${NC} Quick Status (One-liner)"
    echo -e "${BLUE}[0]${NC} Exit"
    echo ""
}

quick_status() {
    echo -e "${BLUE}‚ö° Quick Status Check:${NC}"
    echo "====================="
    
    # CPU Status
    CPU_FREQ=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq)
    CPU_FREQ_MHZ=$((CPU_FREQ / 1000))
    echo -e "CPU Max: ${GREEN}${CPU_FREQ_MHZ}MHz${NC}"
    
    # GPU Status
    V3D_FREQ=$(vcgencmd measure_clock v3d | awk -F'=' '{printf "%.0f", $2/1000000}')
    echo -e "GPU V3D: ${GREEN}${V3D_FREQ}MHz${NC}"
    
    # Temperature
    TEMP=$(vcgencmd measure_temp | awk -F'=' '{print $2}')
    echo -e "Temperature: ${GREEN}$TEMP${NC}"
    
    # Throttling
    THROTTLED=$(vcgencmd get_throttled)
    if [[ "$THROTTLED" == "throttled=0x0" ]]; then
        echo -e "Status: ${GREEN}Stable${NC}"
    else
        echo -e "Status: ${RED}Throttling Detected${NC}"
    fi
}

# Main execution
show_banner

if [ "$1" = "status" ]; then
    quick_status
    exit 0
fi

while true; do
    show_menu
    read -p "Choose an option [0-9]: " choice
    echo
    
    case $choice in
        1)
            echo -e "${BLUE}üîç Running System Health Check...${NC}"
            "$CURRENT_SCRIPTS/monitoring/check_system_health.sh"
            ;;
        2)
            echo -e "${BLUE}üìä Starting Real-time Monitoring (Ctrl+C to stop)...${NC}"
            watch -n 1 "$CURRENT_SCRIPTS/monitoring/check_system_health.sh"
            ;;
        3)
            echo -e "${RED}‚ö†Ô∏è  COMPLETE ROLLBACK - This will revert ALL optimizations${NC}"
            read -p "Are you sure? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                sudo "$CURRENT_SCRIPTS/rollback/rollback_all_optimizations.sh"
            fi
            ;;
        4)
            echo -e "${YELLOW}üîÑ CPU Overclock Rollback${NC}"
            sudo "$CURRENT_SCRIPTS/rollback/rollback_cpu_overclock.sh"
            ;;
        5)
            echo -e "${YELLOW}üîÑ GPU Settings Rollback${NC}"
            sudo "$CURRENT_SCRIPTS/rollback/rollback_gpu_settings.sh"
            ;;
        6)
            echo -e "${PURPLE}üîß Version Management${NC}"
            "$SCRIPT_DIR/manage_versions.sh"
            ;;
        7)
            echo -e "${PURPLE}üìö Opening Documentation...${NC}"
            if command -v less &> /dev/null; then
                less "$SCRIPT_DIR/README.md"
            else
                cat "$SCRIPT_DIR/README.md"
            fi
            ;;
        8)
            echo -e "${RED}üö® Emergency Recovery Guide${NC}"
            if command -v less &> /dev/null; then
                less "$CURRENT_SCRIPTS/emergency/EMERGENCY_RECOVERY.md"
            else
                cat "$CURRENT_SCRIPTS/emergency/EMERGENCY_RECOVERY.md"
            fi
            ;;
        9)
            quick_status
            ;;
        0)
            echo -e "${GREEN}üëã Goodbye!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Invalid option. Please choose 0-9.${NC}"
            ;;
    esac
    
    echo
    read -p "Press Enter to continue..."
    clear
    show_banner
done